/*
深度优先搜索。
通过函数int(string a,string b)处理每两组数组之间的关系，保存其重合部分的长度（int(i,j)!=int(j,i)，并判断是否首尾相连，若重合长度为0，则不相连。枚举x单词后面与b单词前面是否相同，不同则跳，没跳就记录。核心代码：if(x[lx-i+j]!=y[j]) break;

通过过程void(int a,int b)进行深度优先搜索，过程中间记录现有龙的尾部单词序号及龙长。有新龙长=旧龙长+可接单词长度-重合长度。因为重合长度已经存入数组中了，可以直接调用。
变量m记录最大龙长，一旦出现大于m的龙长就更新m；
这样一个看似非常麻烦的问题就被分解成为3个简单问题：处理单词间的关系、搜索遍历、记录最大长度
*/